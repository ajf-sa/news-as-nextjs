// Code generated by sqlc. DO NOT EDIT.
// source: users.sql

package db

import (
	"context"
)

const addNewUser = `-- name: AddNewUser :one
INSERT INTO users(username,password)VALUES($1,$2) RETURNING id, username, password, email, create_at
`

type AddNewUserParams struct {
	Username string
	Password string
}

func (q *Queries) AddNewUser(ctx context.Context, arg AddNewUserParams) (User, error) {
	row := q.queryRow(ctx, q.addNewUserStmt, addNewUser, arg.Username, arg.Password)
	var i User
	err := row.Scan(
		&i.ID,
		&i.Username,
		&i.Password,
		&i.Email,
		&i.CreateAt,
	)
	return i, err
}

const getOneUSer = `-- name: GetOneUSer :one
SELECT id, username, password, email, create_at FROM users WHERE username=$1 LIMIT 1 OFFSET 0
`

func (q *Queries) GetOneUSer(ctx context.Context, username string) (User, error) {
	row := q.queryRow(ctx, q.getOneUSerStmt, getOneUSer, username)
	var i User
	err := row.Scan(
		&i.ID,
		&i.Username,
		&i.Password,
		&i.Email,
		&i.CreateAt,
	)
	return i, err
}
